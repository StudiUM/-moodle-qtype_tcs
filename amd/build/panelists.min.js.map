{"version":3,"file":"panelists.min.js","sources":["../src/panelists.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Send emails for panelist page.\n *\n * @module     mod_concordance/panelists\n * @copyright  2020 Université de Montréal\n * @author     Issam Taboubi <issam.taboubi@umontreal.ca>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/str', 'core/modal_factory', 'core/modal_events', 'core/templates', 'core/notification', 'core/ajax'],\n    function($, Str, ModalFactory, ModalEvents, Templates, Notification, Ajax) {\n\n        var SELECTORS = {\n            SENDACTIONBUTTON: \"#showpanelistemailpopup\",\n            PANELISTSSELECTEDCHECKBOXES: \"input[name='panelists']:checked\",\n            PANELISTSCHECKBOXES: \"input[name='panelists']\",\n            CHECKALLLINK: \"#checkall\",\n            CHECKNONELINK: \"#checknone\"\n        };\n\n        /**\n         * Constructor\n         *\n         * @param {Object} options Object containing options.\n         */\n        var Panelists = function(options) {\n\n            this.cmid = options.cmid;\n\n            this.attachEventListeners();\n        };\n\n        // Class variables and functions.\n\n        /**\n         * @var {Modal} modal\n         * @private\n         */\n        Panelists.prototype.modal = null;\n\n        /**\n         * @var {int} Course module id\n         * @private\n         */\n        Panelists.prototype.cmid = -1;\n\n        /**\n         * Private method\n         *\n         * @method attachEventListeners\n         * @private\n         */\n        Panelists.prototype.attachEventListeners = function() {\n            $(SELECTORS.SENDACTIONBUTTON).on('click', function(e) {\n                e.preventDefault();\n\n                var ids = [];\n                $(SELECTORS.PANELISTSSELECTEDCHECKBOXES).each(function(index, ele) {\n                    var id = $(ele).val();\n                    ids.push(id);\n                });\n\n                this.showSendEmail(ids).fail(Notification.exception);\n            }.bind(this));\n\n            $(SELECTORS.CHECKALLLINK).on('click', function(e) {\n                e.preventDefault();\n                $(SELECTORS.PANELISTSCHECKBOXES).prop('checked', true);\n                $(SELECTORS.SENDACTIONBUTTON).prop('disabled', false);\n            });\n\n            $(SELECTORS.CHECKNONELINK).on('click', function(e) {\n                e.preventDefault();\n                $(SELECTORS.PANELISTSCHECKBOXES).prop('checked', false);\n                $(SELECTORS.SENDACTIONBUTTON).prop('disabled', true);\n            });\n\n            $(SELECTORS.PANELISTSCHECKBOXES).on('change', function() {\n                // Enable/disable buttonsend.\n                if ($(SELECTORS.PANELISTSSELECTEDCHECKBOXES).length > 0) {\n                    $(SELECTORS.SENDACTIONBUTTON).prop('disabled', false);\n                } else {\n                    $(SELECTORS.SENDACTIONBUTTON).prop('disabled', true);\n                }\n            });\n        };\n\n        /**\n         * Show the send email popup.\n         *\n         * @method showSendEmail\n         * @private\n         * @param {int[]} users\n         * @return {Promise}\n         */\n        Panelists.prototype.showSendEmail = function(users) {\n\n            if (users.length == 0) {\n                // Nothing to do.\n                return $.Deferred().resolve().promise();\n            }\n            var titlePromise = null;\n            if (users.length == 1) {\n                titlePromise = Str.get_string('sendbulkmessagesingle', 'core_message');\n            } else {\n                titlePromise = Str.get_string('sendbulkmessage', 'core_message', users.length);\n            }\n            var loadingtxtPromise = Str.get_string('loading');\n            return $.when(\n                    ModalFactory.create({\n                        type: ModalFactory.types.SAVE_CANCEL,\n                        body: Templates.render('mod_concordance/send_bulk_email', {})\n                    }),\n                    titlePromise,\n                    loadingtxtPromise\n                    ).then(function(modal, title, loadingtxt) {\n                        // Keep a reference to the modal.\n                        this.modal = modal;\n\n                        this.modal.setTitle(title);\n                        this.modal.setSaveButtonText(title);\n\n                        this.modal.getRoot().on(ModalEvents.hidden, function() {\n                            $(SELECTORS.SENDACTIONBUTTON).focus();\n                            this.modal.getRoot().remove();\n                        }.bind(this));\n\n                        this.modal.getRoot().on(ModalEvents.save, this.submitSendEmail.bind(this, users, loadingtxt));\n                        var self = this;\n                        this.modal.getRoot().on('change keyup', '#subject-bulk-email, #body-bulk-email', function() {\n                            var messageText = self.modal.getRoot().find('form textarea').val();\n                            var subject = self.modal.getRoot().find('form input').val();\n                            messageText = messageText.trim();\n                            subject = subject.trim(subject);\n                            if (messageText.length === 0 || subject.length === 0) {\n                                self.modal.getRoot().find('button[data-action=\"save\"]').prop('disabled', true);\n                            } else {\n                                self.modal.getRoot().find('button[data-action=\"save\"]').prop('disabled', false);\n                            }\n                        });\n\n                        this.modal.show();\n\n                        return this.modal;\n                    }.bind(this));\n        };\n\n        /**\n         * Send a message to these users.\n         *\n         * @method submitSendEmail\n         * @private\n         * @param {int[]} users\n         * @param {String} loadingtxt\n         * @param {Event} e Form submission event.\n         * @return {Promise}\n         */\n        Panelists.prototype.submitSendEmail = function(users, loadingtxt, e) {\n            e.preventDefault();\n            var messageText = this.modal.getRoot().find('form textarea').val();\n            var subject = this.modal.getRoot().find('form input').val();\n            var loading = '<i class=\"fa fa-spinner fa-pulse m-l-1\"></i><span class=\"sr-only\">' + loadingtxt + '</span>';\n            this.modal.getRoot().find('button[data-action=\"save\"]').append(loading);\n            this.modal.getRoot().find('.modal-content').css('pointer-events', 'none');\n            return Ajax.call([{\n                methodname: 'mod_concordance_send_message',\n                args: {\n                    users: users,\n                    message: messageText,\n                    subject: subject,\n                    cmid: this.cmid,\n                    displaynotification: true\n                }\n                }])[0].then(function(result) {\n                    if (result) {\n                        window.location.reload(true);\n                    }\n                    return true;\n                }).catch(Notification.exception);\n        };\n\n        return /** @alias module:mod_concordance/panelists */ {\n            // Public variables and functions.\n\n            /**\n             * Initialise.\n             *\n             * @method init\n             * @param {Object} options - List of options.\n             * @return {Panelists}\n             */\n            'init': function(options) {\n                return new Panelists(options);\n            }\n        };\n    });\n"],"names":["define","$","Str","ModalFactory","ModalEvents","Templates","Notification","Ajax","SELECTORS","Panelists","options","cmid","attachEventListeners","prototype","modal","on","e","preventDefault","ids","each","index","ele","id","val","push","showSendEmail","fail","exception","bind","this","prop","length","users","Deferred","resolve","promise","titlePromise","get_string","loadingtxtPromise","when","create","type","types","SAVE_CANCEL","body","render","then","title","loadingtxt","setTitle","setSaveButtonText","getRoot","hidden","focus","remove","save","submitSendEmail","self","messageText","find","subject","trim","show","loading","append","css","call","methodname","args","message","displaynotification","result","window","location","reload","catch"],"mappings":"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"}