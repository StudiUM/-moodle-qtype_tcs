{"version":3,"file":"studentquizgeneration.min.js","sources":["../src/studentquizgeneration.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Generate quiz for students.\n *\n * @module     mod_concordance/studentquizgeneration\n * @copyright  2020 Université de Montréal\n * @author     Issam Taboubi <issam.taboubi@umontreal.ca>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/yui'],\n    function($, Y) {\n\n        var SELECTORS = {\n            PANELISTSSELECTEDCHECKBOXES: \"input[name^='paneliststoinclude']:checked\",\n            PANELISTSCHECKBOXES: \"input[name^='paneliststoinclude']\",\n            QUESTIONSSELECTEDCHECKBOXES: \"input[name^='questionstoinclude']:checked\",\n            QUESTIONSCHECKBOXES: \"input[name^='questionstoinclude']\",\n            SUBMITBUTTON: \"input[name='submitbutton']\",\n            SECTIONSELECTOR: \".concordancequestionsection\",\n            FORMSELECTOR: \"#generatestudentquizform\",\n            QUIZNAME: \"#generatestudentquizform input[name='name']\",\n            QUESTIONSINCLUDEERROR: \"#questionstoincludeerror\",\n            PANELISTSINCLUDEERROR: \"#paneliststoincludeerror\"\n        };\n\n        var validateform = function() {\n            if ($(SELECTORS.PANELISTSSELECTEDCHECKBOXES).length > 0 &&\n                    $(SELECTORS.QUESTIONSSELECTEDCHECKBOXES).length > 0 &&\n                    $(SELECTORS.QUIZNAME).val() !== '') {\n                $(SELECTORS.SUBMITBUTTON).prop('disabled', false);\n            } else {\n                $(SELECTORS.SUBMITBUTTON).prop('disabled', true);\n            }\n            if ($(SELECTORS.PANELISTSSELECTEDCHECKBOXES).length === 0) {\n                $(SELECTORS.PANELISTSINCLUDEERROR).show();\n            } else {\n                $(SELECTORS.PANELISTSINCLUDEERROR).hide();\n            }\n            if ($(SELECTORS.QUESTIONSSELECTEDCHECKBOXES).length === 0) {\n                $(SELECTORS.QUESTIONSINCLUDEERROR).show();\n            } else {\n                $(SELECTORS.QUESTIONSINCLUDEERROR).hide();\n            }\n        };\n\n        var checkquestionremove = function() {\n            var valid = true;\n            $(SELECTORS.SECTIONSELECTOR).each(function() {\n                if ($(this).find(SELECTORS.QUESTIONSSELECTEDCHECKBOXES).length === 0) {\n                    valid = false;\n                    return false;\n                }\n            });\n\n            if (valid === false) {\n                Y.use('moodle-core-notification-alert', function() {\n                    var alert = new M.core.alert({\n                        title: M.util.get_string('cannotremoveslots', 'mod_quiz'),\n                        message: M.util.get_string('cannotremoveallsectionslots', 'mod_concordance')\n                    });\n\n                    alert.show();\n                });\n                return false;\n            }\n            return true;\n        };\n\n        return /** @alias module:mod_concordance/studentquizgeneration */ {\n            // Public variables and functions.\n\n            /**\n             * Initialise.\n             *\n             * @method init\n             */\n            'init': function() {\n                $(SELECTORS.SUBMITBUTTON).prop('disabled', true);\n                $(SELECTORS.PANELISTSCHECKBOXES + ',' + SELECTORS.QUESTIONSCHECKBOXES).on('change', function() {\n                    // Enable/disable submitbutton.\n                    validateform();\n                });\n                $(SELECTORS.QUIZNAME).on('change', function() {\n                    // Enable/disable submitbutton.\n                    validateform();\n                });\n                validateform();\n                // Check questions removal on submit.\n                $(SELECTORS.FORMSELECTOR).on(\"submit\", function() {\n                    return checkquestionremove();\n                });\n            }\n        };\n    });\n"],"names":["define","$","Y","SELECTORS","validateform","length","val","prop","show","hide","on","valid","each","this","find","use","M","core","alert","title","util","get_string","message"],"mappings":";;;;;;;;AAuBAA,+CAAO,CAAC,SAAU,aACd,SAASC,EAAGC,OAEJC,sCAC6B,4CAD7BA,8BAEqB,oCAFrBA,sCAG6B,4CAH7BA,8BAIqB,oCAJrBA,uBAKc,6BALdA,0BAMiB,8BANjBA,uBAOc,2BAPdA,mBAQU,8CARVA,gCASuB,2BATvBA,gCAUuB,2BAGvBC,aAAe,WACXH,EAAEE,uCAAuCE,OAAS,GAC9CJ,EAAEE,uCAAuCE,OAAS,GAClB,KAAhCJ,EAAEE,oBAAoBG,MAC1BL,EAAEE,wBAAwBI,KAAK,YAAY,GAE3CN,EAAEE,wBAAwBI,KAAK,YAAY,GAES,IAApDN,EAAEE,uCAAuCE,OACzCJ,EAAEE,iCAAiCK,OAEnCP,EAAEE,iCAAiCM,OAEiB,IAApDR,EAAEE,uCAAuCE,OACzCJ,EAAEE,iCAAiCK,OAEnCP,EAAEE,iCAAiCM,cA2BuB,MAQtD,WACJR,EAAEE,wBAAwBI,KAAK,YAAY,GAC3CN,EAAEE,8BAAgC,IAAMA,+BAA+BO,GAAG,UAAU,WAEhFN,kBAEJH,EAAEE,oBAAoBO,GAAG,UAAU,WAE/BN,kBAEJA,eAEAH,EAAEE,wBAAwBO,GAAG,UAAU,kBA1CvCC,OAAQ,EACZV,EAAEE,2BAA2BS,MAAK,cACqC,IAA/DX,EAAEY,MAAMC,KAAKX,uCAAuCE,cACpDM,OAAQ,GACD,MAID,IAAVA,QACAT,EAAEa,IAAI,kCAAkC,WACxB,IAAIC,EAAEC,KAAKC,MAAM,CACzBC,MAAOH,EAAEI,KAAKC,WAAW,oBAAqB,YAC9CC,QAASN,EAAEI,KAAKC,WAAW,8BAA+B,qBAGxDb,WAEH,GAlBW,IAClBG"}